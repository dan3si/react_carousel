{"version":3,"sources":["components/Carousel.js","components/Control.js","App.js","index.js"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","className","style","width","map","image","i","src","alt","key","transition","type","onClick","slide","document","querySelector","targetMargin","marginLeft","parseInt","window","getComputedStyle","length","Control","mainComponent","defaultValue","setState","properties","value","App","state","this","React","Component","ReactDOM","render","getElementById"],"mappings":"uRAmFeA,G,YA/EE,SAAC,GAAD,IACfC,EADe,EACfA,OACAC,EAFe,EAEfA,KACAC,EAHe,EAGfA,UACAC,EAJe,EAIfA,UACAC,EALe,EAKfA,kBALe,OAOf,yBAAKC,UAAU,YACb,yBACEA,UAAU,YACVC,MAAO,CACLC,MAAQJ,EAAYD,IAGrBF,EAAOQ,KAAI,SAACC,EAAOC,GAAR,OACV,yBACEC,IAAKF,EACLG,IAAKF,EACLG,IAAKJ,EACLJ,UAAU,QACVC,MAAO,CACLC,MAAM,GAAD,OAAKJ,EAAL,MACLW,WAAW,GAAD,OAAKV,EAAL,aAMlB,yBAAKC,UAAU,kBACb,4BACEA,UAAU,eACVU,KAAK,SACLC,QAAS,WACP,IAAMC,EAAQC,SAASC,cAAc,UAKjCC,GAJkBH,EAAMX,MAAMe,WAC9BC,SAASL,EAAMX,MAAMe,WAAY,IACjCC,SAASC,OACRC,iBAAiBP,GAAOI,WAAY,KACLlB,EAAYF,EAE5CmB,EAAe,IACjBA,EAAe,GAGjBH,EAAMX,MAAMe,WAAZ,UAA4BD,EAA5B,SAGJ,4BACEf,UAAU,eACVU,KAAK,SACLC,QAAS,WACP,IAAMC,EAAQC,SAASC,cAAc,UAKjCC,GAJkBH,EAAMX,MAAMe,WAC9BC,SAASL,EAAMX,MAAMe,WAAY,IACjCC,SAASC,OACRC,iBAAiBP,GAAOI,WAAY,KACLlB,EAAYF,EAE5CmB,GAAiBjB,GAAaH,EAAOyB,OAASvB,KAChDkB,GAAiBjB,GAAaH,EAAOyB,OAASvB,IAGhDe,EAAMX,MAAMe,WAAZ,UAA4BD,EAA5B,aCOKM,G,MArEC,SAAC,GAAD,IACdzB,EADc,EACdA,KACAC,EAFc,EAEdA,UACAC,EAHc,EAGdA,UACAC,EAJc,EAIdA,kBACAuB,EALc,EAKdA,cALc,OAOd,yBAAKtB,UAAU,WACb,yBAAKA,UAAU,iBAAf,QAEE,2BACEU,KAAK,SACLa,aAAc3B,KAGlB,yBAAKI,UAAU,sBAAf,cAEE,2BACEU,KAAK,SACLa,aAAc1B,KAGlB,yBAAKG,UAAU,sBAAf,cAEE,2BACEU,KAAK,SACLa,aAAczB,KAGlB,yBAAKE,UAAU,8BAAf,2BAEE,2BACEU,KAAK,SACLa,aAAcxB,KAIlB,4BACEW,KAAK,SACLC,QAAS,WACPW,EAAcE,SAAS,CACrBC,WAAY,CACV7B,KAAMiB,SACHC,cAAc,0BAA0BY,MAC3C7B,UAAWgB,SACRC,cAAc,+BAA+BY,MAChD5B,UAAWe,SACRC,cAAc,+BAA+BY,MAChD3B,kBAAmBc,SAChBC,cAAc,uCAAuCY,WAZhE,YCiBWC,E,4MAnDbC,MAAQ,CACNjC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEF8B,WAAY,CACV7B,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,M,uDAIb,IACAJ,EAAWkC,KAAKD,MAAhBjC,OADD,EAOHkC,KAAKD,MAAMH,WAJb7B,EAHK,EAGLA,KACAC,EAJK,EAILA,UACAC,EALK,EAKLA,UACAC,EANK,EAMLA,kBAGF,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,CACEL,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,IAErB,kBAAC,EAAD,CACEH,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBuB,cAAeO,Y,GA7CPC,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASqB,eAAe,W","file":"static/js/main.d850429e.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\nimport PropTypes from 'prop-types';\n\nconst Carousel = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n}) => (\n  <div className=\"Carousel\">\n    <div\n      className=\"Container\"\n      style={{\n        width: (itemWidth * frameSize),\n      }}\n    >\n      {images.map((image, i) => (\n        <img\n          src={image}\n          alt={i}\n          key={image}\n          className=\"Slide\"\n          style={{\n            width: `${itemWidth}px`,\n            transition: `${animationDuration}ms`,\n          }}\n        />\n      ))}\n    </div>\n\n    <div className=\"ButtonsWrapper\">\n      <button\n        className=\"SliderButton\"\n        type=\"button\"\n        onClick={() => {\n          const slide = document.querySelector('.Slide');\n          const currentMargin = slide.style.marginLeft\n            ? parseInt(slide.style.marginLeft, 10)\n            : parseInt(window\n              .getComputedStyle(slide).marginLeft, 10);\n          let targetMargin = currentMargin + (itemWidth * step);\n\n          if (targetMargin > 0) {\n            targetMargin = 0;\n          }\n\n          slide.style.marginLeft = `${targetMargin}px`;\n        }}\n      />\n      <button\n        className=\"SliderButton\"\n        type=\"button\"\n        onClick={() => {\n          const slide = document.querySelector('.Slide');\n          const currentMargin = slide.style.marginLeft\n            ? parseInt(slide.style.marginLeft, 10)\n            : parseInt(window\n              .getComputedStyle(slide).marginLeft, 10);\n          let targetMargin = currentMargin - (itemWidth * step);\n\n          if (targetMargin < -(itemWidth * (images.length - frameSize))) {\n            targetMargin = -(itemWidth * (images.length - frameSize));\n          }\n\n          slide.style.marginLeft = `${targetMargin}px`;\n        }}\n      />\n    </div>\n  </div>\n);\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './Control.scss';\nimport PropTypes from 'prop-types';\n\nconst Control = ({\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  mainComponent,\n}) => (\n  <div className=\"Control\">\n    <div className=\"Control__step\">\n      Step:\n      <input\n        type=\"number\"\n        defaultValue={step}\n      />\n    </div>\n    <div className=\"Control__frameSize\">\n      Frame size:\n      <input\n        type=\"number\"\n        defaultValue={frameSize}\n      />\n    </div>\n    <div className=\"Control__itemWidth\">\n      Item width:\n      <input\n        type=\"number\"\n        defaultValue={itemWidth}\n      />\n    </div>\n    <div className=\"Control__animationDuration\">\n      Animation duration (ms):\n      <input\n        type=\"number\"\n        defaultValue={animationDuration}\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      onClick={() => {\n        mainComponent.setState({\n          properties: {\n            step: document\n              .querySelector('.Control__step > input').value,\n            frameSize: document\n              .querySelector('.Control__frameSize > input').value,\n            itemWidth: document\n              .querySelector('.Control__itemWidth > input').value,\n            animationDuration: document\n              .querySelector('.Control__animationDuration > input').value,\n          },\n        });\n      }}\n    >\n      Apply\n    </button>\n  </div>\n);\n\nControl.propTypes = {\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  mainComponent: PropTypes.objectOf(\n    PropTypes.shape(),\n  ).isRequired,\n};\n\nexport default Control;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\nimport Control from './components/Control';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    properties: {\n      step: 3,\n      frameSize: 3,\n      itemWidth: 130,\n      animationDuration: 1000,\n    },\n  };\n\n  render() {\n    const { images } = this.state;\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.state.properties;\n\n    return (\n      <div className=\"App\">\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n        <Control\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          mainComponent={this}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}